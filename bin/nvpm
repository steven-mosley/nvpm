#!/usr/bin/env bash

set -e

# Set NVPM_ROOT if not already set
NVPM_ROOT="${NVPM_ROOT:-$HOME/.nvpm}"
NVPM_SRC="${NVPM_SRC:-$NVPM_ROOT/src}"
VERSION_FILE="$NVPM_ROOT/version"

# Load configuration, logging, and core functions
source "$NVPM_SRC/core/config.sh"
source "$NVPM_SRC/core/logging.sh"
source "$NVPM_SRC/core/profile.sh"
source "$NVPM_SRC/ui/menu.sh"

# Show usage information
usage() {
    cat << EOF
NVPM - Neovim Profile Manager v$(cat "$VERSION_FILE" 2>/dev/null || echo "0.1")

Usage: nvpm <command> [options]

Commands:
    create <name>                  Create a new Neovim profile
    list                           List all available profiles
    global <name>                  Set a system wide global profile
    remove <name>                  Remove a profile
    current                        Show current active profile
    exec <program>                 Execute the given program with the NVIM_APPNAME set
    version                        Show NVPM version
    help                           Show this help message

Examples:
    nvpm create my-config
    nvpm list
    nvpm global my-config
    nvpm remove my-config
    nvpm exec nvim

For more information, visit: https://github.com/steven-mosley/nvpm
EOF
}

# Exec command to route through NVPM
exec_nvim() {
    local program="$1"
    shift

    # Determine the active profile
    local active_profile_name
    active_profile_name="$(cat "$NVPM_ROOT/global_profile" 2>/dev/null || echo "default")"
    
    local wrapper_script="$NVPM_ROOT/wrappers/$active_profile_name"
    if [ ! -f "$wrapper_script" ]; then
        log_error "Wrapper script does not exist for profile: $active_profile_name"
        exit 1
    fi
    
    echo "Executing wrapper script: $wrapper_script $@"  # Debug print
    exec "$wrapper_script" "$@"
}

# Main entry point
main() {
    # Execute the appropriate command
    case "$1" in
        "create")
            create_profile "${@:2}"
            ;;
        "list")
            list_profiles
            ;;
        "global")
            global_profile "${@:2}"
            ;;
        "remove")
            remove_profile "${@:2}"
            ;;
        "current")
            current_profile
            ;;
        "exec")
            if [[ "$2" == "nvim" ]]; then
                exec_nvim "${@:3}"
            else
                log_error "Unknown exec target: $2"
                usage
                exit 1
            fi
            ;;
        "version")
            echo "nvpm version $(cat "$VERSION_FILE" 2>/dev/null || echo "0.1")"
            ;;
        "help"|"--help"|"-h"|"")
            usage
            ;;
        *)
            # Display error message and usage, do not re-run the script
            log_error "Unknown command: $1"
            usage
            exit 1
            ;;
    esac
}

# Run the main function with all arguments
main "$@"
