#!/usr/bin/env bash

set -e

# Set NVPM_ROOT if not already set
NVPM_ROOT="${NVPM_ROOT:-$HOME/.nvpm}"
NVPM_SRC="${NVPM_SRC:-$NVPM_ROOT/src}"
VERSION_FILE="$NVPM_ROOT/version"

# Load configuration, logging, and core functions
source "$NVPM_SRC/core/config.sh"
source "$NVPM_SRC/core/logging.sh"
source "$NVPM_SRC/core/profile.sh"
source "$NVPM_SRC/ui/menu.sh"

# Show usage information
usage() {
    echo -e \
"${BLUE}${BOLD}┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃         Neovim Profile Manager       ┃
┃                 v$(cat "$VERSION_FILE" 2>/dev/null || echo "0.1")                 ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛${NC}

${BOLD}Usage:${NC} nvpm ${YELLOW}<command>${NC} [options]

${CYAN}${BOLD}Commands:${NC}
    ${YELLOW}${BOLD}Profile Management:${NC}
        ${GREEN}create${NC} ${YELLOW}<name>${NC}                  Create a new Neovim profile
        ${GREEN}list${NC}                           List all available profiles
        ${GREEN}global${NC} ${YELLOW}<name>${NC}                  Set a system wide global profile
        ${GREEN}remove${NC} ${YELLOW}<name>${NC}                  Remove a profile
        ${GREEN}current${NC}                        Show current active profile

    ${MAGENTA}${BOLD}Profile Maintenance:${NC}
        ${GREEN}clearstate${NC} ${YELLOW}<name>${NC}              Clear the state of a profile
        ${GREEN}clearshare${NC} ${YELLOW}<name>${NC}              Clear the share of a profile
        ${GREEN}clearcache${NC} ${YELLOW}<name>${NC}              Clear the cache of a profile


    ${BLUE}${BOLD}Shim Executor:${NC}
        ${GREEN}exec${NC} ${YELLOW}<program>${NC}                 Execute the given program with the NVIM_APPNAME set

    ${CYAN}${BOLD}About${NC}
        ${GREEN}version${NC}                        Show NVPM version
        ${GREEN}help${NC}                           Show this help message

${YELLOW}${BOLD}Examples:${NC}
    ${DIM}nvpm create my-config
    nvpm list
    nvpm global my-config
    nvpm remove my-config
    nvpm exec nvim${NC}

${BOLD}For more information, visit:${NC} ${BLUE}${UNDERLINE}https://github.com/steven-mosley/nvpm${NC}"
}

# Exec command to route through NVPM
exec_nvim() {
    # Since we know the first argument will be "nvim", we can ignore it
    # and only pass additional arguments if they exist
    shift  # Remove "nvim" from the arguments

    # Determine the active profile
    if [ ! -f "$NVPM_ROOT/global_profile" ]; then
        echo "system" > "$NVPM_ROOT/global_profile"
    fi
    active_profile_name="$(cat "$NVPM_ROOT/global_profile" 2>/dev/null)"

    # If the global profile is set to "system", run nvim normally
    if [ "$active_profile_name" == "system" ]; then
        exec /usr/bin/nvim "$@"
        return
    fi

    local wrapper_script="$NVPM_ROOT/wrappers/$active_profile_name"
    if [ ! -f "$wrapper_script" ]; then
        echo "ERROR: Wrapper script does not exist for profile: $active_profile_name"
        read -p "Wrapper script $active_profile_name not found. Would you like to revert to system? (y/n) " response
        if [[ "$response" == "y" || "$response" == "Y" ]]; then
            echo "system" > "$NVPM_ROOT/global_profile"
            echo "Global profile set to system. Launching nvim..."
            exec /usr/bin/nvim "$@"
        else
            echo "Aborting..."
            exit 1
        fi
        return
    fi

    echo "Executing wrapper script: $wrapper_script $@"  # Debug print
    # Only pass remaining arguments if they exist
    if [ $# -eq 0 ]; then
        exec "$wrapper_script"
    else
        exec "$wrapper_script" "$@"
    fi
}

# Main entry point
main() {
    # Execute the appropriate command
    case "$1" in
        "create")
            create_profile "${@:2}"
            ;;
        "list")
            list_profiles
            ;;
        "global")
            global_profile "${@:2}"
            ;;
        "remove")
            remove_profile "${@:2}"
            ;;
        "clearshare")
            remove_share "${@:2}"
            ;;
        "clearstate")
            remove_state "${@:2}"
            ;;
        "clearcache")
            remove_cache "${@:2}"
            ;;
        "current")
            current_profile
            ;;
        "exec")
        if [[ "$2" == "nvim" ]]; then
            exec_nvim "$2" "${@:3}"
        else
            log_error "Unknown exec target: $2"
            usage
            exit 1
        fi
        ;;
        "version")
            echo "nvpm version $(cat "$VERSION_FILE" 2>/dev/null || echo "0.1")"
            ;;
        "help"|"--help"|"-h"|"")
            usage
            ;;
        *)
            # Display error message and usage, do not re-run the script
            log_error "Unknown command: $1"
            usage
            exit 1
            ;;
    esac
}

# Run the main function with all arguments
main "$@"
