#!/usr/bin/env bash

set -e

# Load configuration and logging
source "${BASH_SOURCE%/*}/../src/core/config.sh"
source "${BASH_SOURCE%/*}/../src/core/logging.sh"
source "${BASH_SOURCE%/*}/../src/core/profile.sh"

# Show usage information
usage() {
    cat << EOF
NVPM - Neovim Profile Manager v${NVPM_VERSION}

Usage: nvpm <command> [options]

Commands:
    create <name>                  Create a new Neovim profile
    list                           List all available profiles
    switch <name>                  Switch to a specific profile
    remove <name>                  Remove a profile
    current                        Show current active profile
    version                        Show NVPM version
    help                           Show this help message

Examples:
    nvpm create my-config
    nvpm list
    nvpm switch my-config
    nvpm remove my-config

For more information, visit: https://github.com/steven-mosley/nvpm
EOF
}

# Main entry point
main() {
    # Check if the fetch should be skipped
    if [[ " $* " != *" --skip-fetch "* ]]; then
        # Fetch the latest scripts
        fetch_latest_scripts
        # Re-run the script with --skip-fetch to prevent fetching again
        exec "$0" "$@" --skip-fetch
    else
        # Remove the --skip-fetch flag from the arguments
        set -- "${@/--skip-fetch/}"
        # Execute the appropriate command
        case "$1" in
            "create")
                create_profile "${@:2}"
                ;;
            "list")
                list_profiles
                ;;
            "switch")
                switch_profile "${@:2}"
                ;;
            "remove")
                remove_profile "${@:2}"
                ;;
            "current")
                current_profile
                ;;
            "version")
                echo "nvpm version $NVPM_VERSION"
                ;;
            "help"|"--help"|"-h"|"")
                usage
                ;;
            *)
                # Display error message and usage, do not re-run the script
                log_error "Unknown command: $1"
                usage
                exit 1
                ;;
        esac
    fi
}

# Run the main function with all arguments
main "$@"
